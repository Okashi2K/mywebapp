trigger:
  branches:
    include:
      - main

stages:
  - stage: Build
    displayName: 'Build stage'
    jobs:
      - job: BuildJob
        displayName: 'Build and Publish'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: DotNetCoreCLI@2
            inputs:
              command: 'build'
              projects: '**/*.csproj'
          - task: DotNetCoreCLI@2
            inputs:
              command: 'publish'
              publishWebProjects: true
              arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
              zipAfterPublish: true
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: 'drop'

  - stage: Deploy_Test
    displayName: 'Deploy to Test'
    dependsOn: Build
    jobs:
      - deployment: DeployTest
        displayName: 'Deploy to Test Environment'
        environment: 'test'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop
                - task: AzureWebApp@1
                  inputs:
                    azureSubscription: '<Azure-service-connection>'
                    appName: '<your-test-app-service>'
                    package: '$(Pipeline.Workspace)/drop/**/*.zip'

  - stage: ManualApproval
    displayName: 'Manual Approval Before Production'
    dependsOn: Deploy_Test
    jobs:
      - job: WaitForApproval
        displayName: 'Wait for Approval'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: ManualValidation@0
            inputs:
              instructions: 'Bevestig dat de uitrol naar TEST succesvol is verlopen en dat alles werkt.'
              onTimeout: 'reject'
              timeout: '1d'

  - stage: Deploy_Prod
    displayName: 'Deploy to Production'
    dependsOn: ManualApproval
    jobs:
      - deployment: DeployProd
        displayName: 'Deploy to Production Environment'
        environment: 'production'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop
                - task: AzureWebApp@1
                  inputs:
                    azureSubscription: '<Azure-service-connection>'
                    appName: '<your-prod-app-service>'
                    package: '$(Pipeline.Workspace)/drop/**/*.zip'
